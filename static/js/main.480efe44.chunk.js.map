{"version":3,"sources":["components/card/card.jsx","components/card-list/card-list.jsx","components/search-box/search-box.jsx","App.js","index.js"],"names":["Card","props","className","src","monsters","id","alt","name","email","CardList","map","SearchBox","placeholder","handleChange","type","onChange","App","state","searchField","fetch","then","response","json","users","setState","this","filteredMonsters","filter","monster","toLowerCase","includes","toLocaleLowerCase","e","target","value","sort","a","b","nameA","toUpperCase","nameB","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mUAgBeA,EAbF,SAAAC,GACX,OACE,sBAAKC,UAAU,iBAAf,UACE,qBACEC,IAAG,+BAA0BF,EAAMG,SAASC,GAAzC,0BACHC,IAAI,YAEN,6BAAKL,EAAMG,SAASG,OACpB,4BAAIN,EAAMG,SAASI,YCGVC,EAVE,SAAAR,GACf,OACE,qBAAKC,UAAU,YAAf,SACGD,EAAMG,SAASM,KAAI,SAAAN,GAAQ,OAC1B,cAAC,EAAD,CAAwBA,SAAUA,GAAvBA,EAASC,UCMbM,G,MAXG,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aAChC,OACE,uBACEX,UAAU,SACVY,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCgDDG,G,wDAnDb,aAAe,IAAD,8BACZ,gBAEKC,MAAQ,CACXb,SAAU,GACVc,YAAa,IALH,E,qDAUd,WAAqB,IAAD,OAClBC,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKC,SAAS,CAAEpB,SAAUmB,S,oBAG7C,WAAU,IAAD,SAC2BE,KAAKR,MAA/Bb,EADD,EACCA,SAAUc,EADX,EACWA,YACZQ,EAAmBtB,EAASuB,QAAO,SAAAC,GAAO,OAC9CA,EAAQrB,KAAKsB,cAAcC,SAASZ,EAAYa,wBAElD,OACE,sBAAK7B,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CACEW,aAAc,SAAAmB,GACZ,EAAKR,SAAS,CAAEN,YAAac,EAAEC,OAAOC,SAExCtB,YAAY,mBAGd,cAAC,EAAD,CACER,SAAUsB,EAAiBS,MAAK,SAACC,EAAGC,GAClC,IAAIC,EAAQF,EAAE7B,KAAKgC,cACfC,EAAQH,EAAE9B,KAAKgC,cACnB,OAAID,EAAQE,GACF,EAENF,EAAQE,EACH,EAIF,c,GA5CDC,cCAlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.480efe44.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.css';\r\n\r\nconst Card = props => {\r\n  return (\r\n    <div className=\"card-container\">\r\n      <img\r\n        src={`https://robohash.org/${props.monsters.id}?set=set2&size=180x180`}\r\n        alt=\"monster\"\r\n      />\r\n      <h3>{props.monsters.name}</h3>\r\n      <p>{props.monsters.email}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport './card-list.css';\r\nimport Card from '../card/card';\r\n\r\nconst CardList = props => {\r\n  return (\r\n    <div className=\"card-list\">\r\n      {props.monsters.map(monsters => (\r\n        <Card key={monsters.id} monsters={monsters} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardList;\r\n","import React from 'react';\r\nimport './search-box.css';\r\n\r\nconst SearchBox = ({ placeholder, handleChange }) => {\r\n  return (\r\n    <input\r\n      className=\"search\"\r\n      type=\"search\"\r\n      placeholder={placeholder}\r\n      onChange={handleChange}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React, { Component } from 'react';\nimport CardList from './components/card-list/card-list';\nimport SearchBox from './components/search-box/search-box';\nimport './App.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      monsters: [],\n      searchField: '',\n    };\n  }\n  // https://jsonplaceholder.typicode.com/users\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json())\n      .then(users => this.setState({ monsters: users }));\n  }\n\n  render() {\n    const { monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter(monster =>\n      monster.name.toLowerCase().includes(searchField.toLocaleLowerCase())\n    );\n    return (\n      <div className=\"App\">\n        <h1>Monsters Rolodex</h1>\n        <SearchBox\n          handleChange={e => {\n            this.setState({ searchField: e.target.value });\n          }}\n          placeholder=\"Search Monster\"\n        />\n\n        <CardList\n          monsters={filteredMonsters.sort((a, b) => {\n            var nameA = a.name.toUpperCase(); // ignore upper and lowercase\n            var nameB = b.name.toUpperCase(); // ignore upper and lowercase\n            if (nameA < nameB) {\n              return -1;\n            }\n            if (nameA > nameB) {\n              return 1;\n            }\n\n            // names must be equal\n            return 0;\n          })}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}